{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "env": {
            "type": "string",
            "metadata": {
                "description": "Environment (DEV, UAT, PRD)"
            }
        },
        "resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group for Logic App"
            }
        },
        "businessUnitTag": {
            "type": "string",
            "metadata": {
                "description": "(Required)Business unit"
            }
        },
        "ProjectNameTag": {
            "type": "string",
            "metadata": {
                "description": "(Required)Project Name"
            }
        },
        "LOBTag": {
            "type": "string",
            "metadata": {
                "description": "(Required)LOB"
            }
        },
        "COBTag": {
            "type": "string",
            "metadata": {
                "description": "(Required)COB"
            }
        },
        "SoldToCodeTag": {
            "type": "string",
            "metadata": {
                "description": "(Required)SoldToCode"
            }
        },
        "IsDREnabledTag": {
            "type": "bool",
            "metadata": {
                "description": "(Required)If Application is DR enabled"
            }
        },
        "AISPatternTag": {
            "type": "string",
            "metadata": {
                "description": "(Required) Description of the deployment pattern. Possible values can be a combination of C2C/C2O/O2O/O2C"
            }
        },
        "AppComplexity": {
            "type": "string",
            "metadata": {
                "description": "(Required) AppComplexity can be either Simple, Medium, Complex or SuperComplex"
            }
        },
        "subscriptionId": {
            "type": "string",
            "metadata": {
                "description": "Subscription Id - Autopopulated from pipeline"
            }
        },
        "LOB": {
            "type": "string",
            "defaultValue": "DS",
            "minLength": 1,
            "maxLength": 2,
            "metadata": {
                "description": "Down steam name"
            }
        },
        "COB": {
            "type": "string",
            "defaultValue": "TS",
            "minLength": 2,
            "metadata": {
                "description": "Class of business"
            }
        },
        "project-suffix": {
            "type": "string",
            "defaultValue": "Cloud",
            "minLength": 1,
            "maxLength": 13,
            "metadata": {
                "description": "Project Suffix along with numeric value. Example: OMEGA-001"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "(Required) Logic app resource Location"
            }
        },
        "IsAppEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "(Optional) Is app enabled?"
            }
        },
        "IsAppRunning": {
            "type": "string",
            "defaultValue": "Stopped",
            "metadata": {
                "description": "(Optional) Provide value Running to start the app"
            }
        },
        "newOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
              "new",
              "existing"
            ],
            "metadata": {
                "description": "Storage account already exist or need to be created with the Logic app"
            }
        },
        "storageAccountRG": {
            "type": "string",
            "metadata": {
                "description": "(Required) Storage account resource group"
            }
        },
        "hostingPlanName": {
            "type": "string",
            "metadata": {
                "description": "(Required) ASP name to host the Logic App"
            }
        },
        "serverFarmResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "(Required) ASP Resource Group"
            }
        },
        "alwaysOn": {
            "type": "bool"
        },
        "use32BitWorkerProcess": {
            "type": "bool"
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "(Required) Storage account name"
            }
        },
        "ASE_ResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "(Required) ASE resource group"
            }
        },
        "ASE_Name": {
            "type": "string",
            "metadata": {
                "description": "(Required) ASE Name that will host the Logic App"
            }
        },
        "netFrameworkVersion": {
            "type": "string"
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "(Required) Virtual network Resource Group"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "(Required) Virtual network name"
            }
        },
        "subnetNames": {
            "type": "array",
            "metadata": {
                "description": "(Required) An array of the subnets having access to Storage account. For LogicApp the APIM and ASE subnet must have access to the storage account"
            }
        },
        "access_restriction": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
                "description": "(Optional) Access restriction will be set to false by default for development environment for both external and VNET environment. Value is determined in GitHub workflow."
            }
        },
        "ipSecurityRestrictions": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "(Optional)An array of IP restrictions. By default for UAT and Production, Access restrictions will be added for APIM Address space."
            }
        },
        "APPINSIGHTS_INSTRUMENTATIONKEY": {
            "type": "string",
            "metadata": {
                "description": "(Required) Application insight instrumentation key for the corresponding environment"
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "(Required) Name of the key vault where secrets for resources are stored for the project"
            }
        },
        "KeyVaultResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "(Required) Name of the key vault resource group"
            }
        },
        "keysPermissions": {
            "type": "array"
        },
        "secretsPermissions": {
            "type": "array"
        },
        "certificatePermissions": {
            "type": "array"
        },
        "SQL_CONNECTION_VALUE": {
            "type": "string",
            "metadata": {
                "description": "(Optional) For LA built in connector for SQL. Remove the section if SQL built in connection is not required"
            } 
        }
    },
    "variables": {
        "sitesLogicAppName": "[concat('LA-','AIS-',parameters('LOB'),'-' ,parameters('COB'),'-' ,parameters('env'),'-' ,parameters('project-suffix'))]"
    },
    "resources": [
        {
            "apiVersion": "2018-11-01",
            "name": "[variables('sitesLogicAppName')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp,workflowapp",
            "location": "[parameters('location')]",
            "tags": {
                "business-unit": "[parameters('businessUnitTag')]",
                "project-name": "[parameters('ProjectNameTag')]",
                "LOB": "[parameters('LOBTag')]",
                "COB": "[parameters('COBTag')]",
                "Sold To Code": "[parameters('SoldToCodeTag')]",
                "IsDREnabled": "[parameters('IsDREnabledTag')]",
                "AISPattern": "[parameters('AISPatternTag')]",
                "AppComplexity": "[parameters('AppComplexity')]"
            },
            "properties": {
                "name": "[variables('sitesLogicAppName')]",
                "enabled": "[parameters('IsAppEnabled')]",
                "state": "[parameters('IsAppRunning')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~14"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId(parameters('subscriptionId'), parameters('storageAccountRG'),'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "AzureFunctionsJobHost__extensionBundle__id",
                            "value": "Microsoft.Azure.Functions.ExtensionBundle.Workflows"
                        },
                        {
                            "name": "AzureFunctionsJobHost__extensionBundle__version",
                            "value": "[1.*, 2.0.0)"
                        },
                        {
                            "name": "APP_KIND",
                            "value": "workflowApp"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[parameters('APPINSIGHTS_INSTRUMENTATIONKEY')]"
                        },
                        {
                            "name": "RefreshLAAppSettings",
                            "value": "RefreshLAAppSettings"
                        },
                        {
                            "name": "sql_connectionString",
                            "value": "[parameters('SQL_CONNECTION_VALUE')]"
                        }
                    ],
                    "cors": {},
                    "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                    "alwaysOn": "[parameters('alwaysOn')]",
                    "netFrameworkVersion": "[parameters('netFrameworkVersion')]",
                    "ipSecurityRestrictions": "[if(equals(parameters('access_restriction'), 'true'), parameters('ipSecurityRestrictions'), json('[]'))]",
                    "ftpsState": "FtpsOnly"
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": null,
                "hostingEnvironmentProfile": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('ASE_ResourceGroup'), '/providers/Microsoft.Web/hostingEnvironments/', parameters('ASE_Name'))]"
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "KVnestedDeployment",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', variables('sitesLogicAppName'))]"
            ],
            "resourceGroup": "[parameters('KeyVaultResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(parameters('keyVaultName'), '/add')]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[subscription().tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('sitesLogicAppName')), '2019-08-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "keys": "[parameters('keysPermissions')]",
                                            "secrets": "[parameters('secretsPermissions')]",
                                            "certificates": "[parameters('certificatePermissions')]"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "condition": "[equals(parameters('newOrExisting'), 'new')]",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "tags": {
                "business-unit": "[parameters('businessUnitTag')]",
                "project-name": "[parameters('ProjectNameTag')]",
                "LOB": "[parameters('LOBTag')]",
                "COB": "[parameters('COBTag')]",
                "Sold To Code": "[parameters('SoldToCodeTag')]",
                "IsDREnabled": "[parameters('IsDREnabledTag')]"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "copy": [
                        {
                          "name": "virtualNetworkRules",
                          "count": "[length(parameters('subnetNames'))]",
                          "input": {
                            "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetNames')[copyIndex('virtualNetworkRules')].subnetName)]",
                            "action": "Allow",
                            "ignoreMissingVNetServiceEndpoint": true
                          }
                        }
                    ],
                    "ipRules": [],
                    "defaultAction": "Deny"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-06-01",
            "name": "STnestedDeployment",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ],
            "resourceGroup": "[parameters('storageAccountRG')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices",
                            "name": "[concat(parameters('storageAccountName'), '/default')]",
                            "apiVersion": "2019-06-01",
                            "properties": {
                                "containerDeleteRetentionPolicy": {
                                    "enabled": true,
                                    "days": 30
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/fileServices",
                            "name": "[concat(parameters('storageAccountName'), '/default')]",
                            "apiVersion": "2022-09-01",
                            "properties": {
                                "shareDeleteRetentionPolicy": {
                                    "enabled": true,
                                    "days": 30
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        }
    ]
}
